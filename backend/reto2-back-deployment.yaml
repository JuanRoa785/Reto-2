apiVersion: apps/v1
kind: Deployment
metadata:
  name: reto2-back-deployment
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec: 
      containers:
      - name: reto2-back
        image: studentroauis/reto2-back:v1
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: postgres-url
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-user
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
---
apiVersion: v1
kind: Service
metadata:
  name: reto2-back-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"  
    prometheus.io/path: "/actuator/prometheus"
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 80 #Puerto que ingress usara
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: reto2-back-out-service
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080
